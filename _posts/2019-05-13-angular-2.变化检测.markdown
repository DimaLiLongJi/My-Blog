---
layout:     post
title:      "angular-2.变化检测"
subtitle:   "Change Detection"
date:       2019-05-13
author:     "本人"
header-img: "img/2019/summary/js.jpeg"
tags:
    - Angular
---


## angularjs（1）里的脏检查

1. 当触发了指定事件后会进入脏数据检测，这时会调用 `$digest` 循环遍历所有的数据观察者，判断当前值是否和先前的值有区别
2. 如果检测到变化的话，会调用 `$watch` 函数
3. 然后再次调用 `$digest` 循环直到发现没有变化。循环至少为二次 ，至多为十次。

脏数据检测虽然存在低效的问题，但是不关心数据是通过什么方式改变的，都可以完成任务，但是这在 Vue 中的双向绑定是存在问题的。并且脏数据检测可以实现批量检测出更新的值，再去统一更新 UI，大大减少了操作 DOM 的次数。所以低效也是相对的，这就仁者见仁智者见智了。


## angular2+ 变化检测（Change Detection）

### 变化检测是什么？

简单来说变化检测就是Angular用来检测视图与模型之间绑定的值是否发生了改变，当检测到模型中绑定的值发生改变时，则同步到视图上。

反之，当检测到视图上绑定的值发生改变时，则回调对应的绑定函数。

### 如何引起变更检测

1. 当angular调用**生命周期**时
2. 当angular触发 **http请求** 时
3. 当angular触发 **定时器** 时
4. 当angular触发 **模板绑定事件** 时

其实，我们不难发现上述三种情况都有一个共同点，即这些导致绑定值发生改变的除了生命周期事件都是**异步发生**的。

如果这些异步的事件在发生时能够通知到Angular框架，那么Angular框架就能及时的检测到变化。

